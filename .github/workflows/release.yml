# .github/workflows/release.yml

# on:
#   release:
#     types: [created]

# jobs:
#   release:
#     name: release ${{ matrix.target }}
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           - target: x86_64-pc-windows-gnu
#             archive: zip
#           - target: x86_64-unknown-linux-musl
#             archive: tar.gz tar.xz tar.zst
#           - target: x86_64-apple-darwin
#             archive: zip
#     steps:
#       - uses: actions/checkout@master
#       - name: Compile and release
#         uses: rust-build/rust-build.action@v1.4.5
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           RUSTTARGET: ${{ matrix.target }}
#           ARCHIVE_TYPES: ${{ matrix.archive }}

name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Release for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: binary
            asset_name: binary-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: binary
            asset_name: binary-linux-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: binary.exe
            asset_name: binary-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: binary
            asset_name: binary-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: binary
            asset_name: binary-macos-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare asset
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}

      - name: Generate SHA-256
        shell: bash
        run: |
          cd ${{ github.workspace }}
          sha256sum ${{ matrix.asset_name }}.tar.gz > ${{ matrix.asset_name }}.tar.gz.sha256

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ matrix.asset_name }}.tar.gz
            ${{ matrix.asset_name }}.tar.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
